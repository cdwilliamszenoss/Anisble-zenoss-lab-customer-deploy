---
- 
  shell: umount -f /dev/mapper/isvcs-isvcs
  failed_when: false
  no_log: True
  notify: daemon-reload

- meta: flush_handlers

- service: name=serviced state=stopped
  failed_when: False
  no_log: True
 
- service: name=docker   state=stopped
  failed_when: False
  no_log: True

- service: name=ntpd  state=stopped
  failed_when: False
  no_log: True
  
- service: name=nfs  state=stopped
  failed_when: False
  no_log: True

- 
  yum: name=serviced state=absent
  failed_when: False
  no_log: True

- yum: name=docker state=absent
  failed_when: False
  no_log: True

- yum: name=ntpd state=absent
  failed_when: False
  no_log: True

- yum: name=nfs state=absent
  failed_when: False
  no_log: True
  notify: daemon-reload

- meta: flush_handlers

- name: Delete directories on system
  file: path="{{item}}" state=absent
  with_items:
  - "/var/log/journal"
  - "/opt/serviced/var/backups"
  - "/opt/serviced/var/isvcs"
  - "/var/log/serviced"
  - "/var/lib/docker"
  - "/etc/systemd/system/docker.service.d"
  - "/etc/systemd/system/nfs-server.service.d"
  - "/tmp/downloads"


  notify: daemon-reload

- meta: flush_handlers


# To find problem container using devicemapper
# find /proc/*/mounts | xargs grep "container id"
# ps -p pid 
- shell: umount -A --recursive /dev/mapper/docker-253\:* 2> /dev/null; dmsetup remove /dev/mapper/docker-253\:* 2> /dev/null
  failed_when: False
  no_log: True


- shell: ls -d  /opt/serviced/var/volumes/* 2> /dev/null
  register: volume_name
  failed_when: False
  no_log: True

- file:
    state: absent
    path: "{{item}}"
  with_items:
  - /opt/serviced/var/volumes/.devicemapper
  - "{{volume_name.stdout_lines}}"
  - /var/lib/docker/devicemapper
  - /var/lib/docker/image/devicemapper
  - /var/lib/docker/volumes/.devicemapper

  failed_when: False
  no_log: True
   

- name: Remove LVM volume Group
  lvg: vg=docker state=absent force=yes

- lvg: vg=isvcs  state=absent force=yes

- lvg: vg=serviced state=absent force=yes


# Use for clean install
#
# Remove partitions from disk
- parted:
    device: /dev/{{hd_device}}
    number: "{{ item }}"
    state: absent
  with_items:
  - "{{ extended_partid }}"
  - "{{ ha_metadata_partid }}"
  - "{{ isvcs_partid }}"
  - "{{ serviced_partid }}"
  - "{{ docker_partid }}"


# Use to Remove all Partitions
#
# Read device information (always use unit when probing)
#- name: Delete Partitions
#  parted: device=/dev/{{hd_device}} unit=MiB
#  register: device_info

# Remove partitions from disk
#- parted:
#    device: /dev/{{hd_device}}
#    number: "{{ item.num }}"
#    state: absent
#  with_items:
# - "{{ device_info.partitions }}"


